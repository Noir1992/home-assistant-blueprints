blueprint:
  name: Enhanced motion light
  description: Enhanced motion light detection.
  domain: automation
  author: Noir1992
  source_url: https://github.com/Noir1992/home-assistant-blueprints/blob/main/automation/enhanced_motion_light.yaml
  input:
    motion_sensor:
      name: Motion sensor
      description: The motion sensor to trigger the automation.
      selector:
        entity:
          filter:
            - domain:
                - binary_sensor
              device_class:
                - motion
          multiple: true
    target_light:
      name: Light
      description: The light to use for the automation.
      selector:
        target:
          entity:
            - domain:
                - light
    lumen_sensor:
      name: Lumen sensor
      description: The lumen sensor to use for the automation. (optional)
      default: {}
      selector:
        entity:
          filter:
            - domain:
                - sensor
          multiple: false
    lumen_threshold:
      name: Lumen threshold
      description:
        The light will only be turned on if the lumen value is smaller.
        (This only applies if a lumen sensor is specified)
      default: 8
      selector:
        number:
          min: 0.0
          max: 200.0
          step: 0.1
          unit_of_measurement: lx
          mode: box
    delay:
      name: Delay
      description:
        The delay before the light will get turned off after no motion
        is detected anymore.
      default: 0
      selector:
        number:
          min: 0.0
          max: 7200.0
          unit_of_measurement: seconds
          mode: box
          step: 1.0
    brightness:
      name: Brightness
      description: Brightness. (optional)
      default: 100.0
      selector:
        number:
          min: 0.0
          max: 100.0
          unit_of_measurement: "%"
          mode: slider
          step: 1.0
    alternative_brightness:
      name: Alternative brightness
      description: Alternative brightness. (optional)
      default:
      selector:
        number:
          min: 0.0
          max: 100.0
          unit_of_measurement: "%"
          mode: slider
          step: 1.0
    use_alternative_brightness:
      name: Use alternative brightness
      description:
        Boolean value to indicate if the alternative brightness should
        be used. (optional)
      default:
      selector:
        entity:
          filter:
            - domain:
                - input_boolean
                - binary_sensor
          multiple: false
    disable_alternative_brightness:
      name: Disable alternative brightness
      description: Boolean input to disable the alternative brightness. (optional)
      default:
      selector:
        entity:
          filter:
            - domain:
                - input_boolean
          multiple: false
    disabled:
      name: Disabled
      description:
        Boolean input to disable the automation (eg. prevent automation
        if no one is home). (optional)
      default:
      selector:
        entity:
          multiple: false
trigger:
  - platform: state
    entity_id: !input motion_sensor
    to: "on"
    id: idMotionOn
  - platform: state
    entity_id: !input motion_sensor
    to: "off"
    id: idMotionOff
    for:
      seconds: !input delay
  - platform: numeric_state
    entity_id: !input lumen_sensor
    below: !input lumen_threshold
    id: idLumen
variables:
  disabled: !input disabled
  target_light: !input target_light
  target_light_first_id: "{% if target_light.entity_id is string %}\n  {{
    target_light.entity_id }}\n{% else %}\n  {{ target_light.entity_id[0]
    }}\n{% endif %}\n"
  lumen_sensor: !input lumen_sensor
  lumen_threshold: !input lumen_threshold
  brightness: !input brightness
  use_alternative_brightness: !input use_alternative_brightness
  alternative_brightness: !input alternative_brightness
  disable_alternative_brightness: !input disable_alternative_brightness
condition:
  - condition: template
    value_template: "{{ not disabled or is_state(disabled, 'off') }}"
  - condition: or
    conditions:
      - condition: trigger
        id: idMotionOff
      - condition: and
        conditions:
          - condition: trigger
            id: idMotionOn
          - condition: template
            value_template:
              "{{ not lumen_sensor or states(lumen_sensor) | int <=
              lumen_threshold | int }}"
      - condition: and
        conditions:
          - condition: trigger
            id: idLumen
          - condition: state
            entity_id: !input motion_sensor
            state: "on"
action:
  - choose:
      - conditions:
          - condition: trigger
            id: idMotionOff
        sequence:
          - service: light.turn_off
            target: !input target_light
      - conditions:
          - condition: trigger
            id:
              - idLumen
              - idMotionOn
        sequence:
          - service: light.turn_on
            target: !input target_light
            data:
              brightness_pct:
                "{% if ( not disable_alternative_brightness or is_state(disable_alternative_brightness,
                'off')) and alternative_brightness and use_alternative_brightness
                and states(use_alternative_brightness) == 'on' %}\n  {{ alternative_brightness
                }}\n{% else %}\n  {{ brightness }}\n{% endif %}\n"
mode: queued
max_exceeded: silent
